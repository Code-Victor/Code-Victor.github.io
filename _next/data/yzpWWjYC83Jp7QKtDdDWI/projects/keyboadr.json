{"pageProps":{"showcase":{"source":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    a: \"a\",\n    h2: \"h2\",\n    ul: \"ul\",\n    li: \"li\",\n    strong: \"strong\",\n    pre: \"pre\",\n    code: \"code\",\n    span: \"span\"\n  }, _provideComponents(), props.components), {Caption, Image, TechStacks, ImageSlider} = _components;\n  if (!Caption) _missingMdxReference(\"Caption\", true);\n  if (!Image) _missingMdxReference(\"Image\", true);\n  if (!ImageSlider) _missingMdxReference(\"ImageSlider\", true);\n  if (!TechStacks) _missingMdxReference(\"TechStacks\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(Caption, {\n      caption: \"keyboadr thumbnail\",\n      children: _jsx(Image, {\n        src: \"../../images/projects/keyboadr-thumbnail-slim.png\",\n        alt: \"project\",\n        width: 1651,\n        height: 640\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"As a beginner software developer, I was always facinated by how senior developers\\nwrote code very fast. I began searching for ways to learn to write code faster and\\nI found this \", _jsx(_components.a, {\n        href: \"https://keyboardr.com\",\n        children: \"typing Club\"\n      }), \" website. the website was so ground\\nto earth and as I went through it I moved from about 24 wpm to about 60 wpm with\\na month. I couldn't hide this acheivement I just kept on telling everyone about it.\\nMonths later, I began thinking of a projects to build. I didn't want to build generic\\nprojects. I wanted somethng unique , something I would love to use for myself.Then\\nI came up with Keyboadr a website to learn/practice keyboarding.\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"links\",\n      children: _jsx(_components.a, {\n        href: \"#links\",\n        children: \"Links\"\n      })\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.strong, {\n          children: \"GitHub Repository:\"\n        }), \" \", _jsx(\"a\", {\n          target: \"_blank\",\n          href: \"https://github.com/Code-Victor/keyboarder\",\n          children: \"https://github.com/Code-Victor/keyboarder\"\n        })]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.strong, {\n          children: \"Live Demo:\"\n        }), \" \", _jsx(\"a\", {\n          target: \"_blank\",\n          href: \"https://code-victor.github.io/keyboarder/\",\n          children: \"https://code-victor.github.io/keyboarder/\"\n        })]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"tech-stack\",\n      children: _jsx(_components.a, {\n        href: \"#tech-stack\",\n        children: \"Tech stack\"\n      })\n    }), \"\\n\", _jsx(TechStacks, {\n      stackNames: [\"React\", \"JavaScript\", \"CSS3\", \"Vite\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"features\",\n      children: _jsx(_components.a, {\n        href: \"#features\",\n        children: \"Features\"\n      })\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"keyboard on screen to show you the key you are typing and if they are correct or not\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Fetching strings to type from a quotes api.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Typing speed is calculated and displayed\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"future-plans\",\n      children: _jsx(_components.a, {\n        href: \"#future-plans\",\n        children: \"Future plans\"\n      })\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"Ability to save your progress and load it back in\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"screenshots\",\n      children: _jsx(_components.a, {\n        href: \"#screenshots\",\n        children: \"Screenshots\"\n      })\n    }), \"\\n\", _jsx(ImageSlider, {\n      images: [{\n        src: \"../../images/slides/keyboadr-1.png\",\n        caption: \"Idle state\"\n      }, {\n        src: \"../../images/slides/keyboadr-2.png\",\n        caption: \"Correct state\"\n      }, {\n        src: \"../../images/slides/keyboadr-3.png\",\n        caption: \"Error state\"\n      }, {\n        src: \"../../images/slides/keyboadr-4.png\",\n        caption: \"Completed practice\"\n      }]\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"lessons-learned\",\n      children: _jsx(_components.a, {\n        href: \"#lessons-learned\",\n        children: \"Lessons Learned\"\n      })\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.strong, {\n          children: \"CSS Grid\"\n        }), \": I was able to build the keyboard layout without using an svg all with CSS grid. It was a great learning experience.\\nI add to make sure each item iteracted well with it's peers, or else the keyboard layout falls apart.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.strong, {\n          children: \"Data Fetching\"\n        }), \": I was able to fetch data conditionally with useEffects only when the data is need and store them in states to ensure the dynamic rendering of the new data.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.strong, {\n          children: \"Optimization is Key!\"\n        }), \": Completing the project I was shocked to see the keyboard layout rendering everytime my counter increases. I was able to optimize the code by using hooks and memoization.\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(Caption, {\n      caption: \"optimizing the keyboard component\",\n      children: _jsx(_components.pre, {\n        className: \"language-jsx\",\n        children: _jsxs(_components.code, {\n          className: \"language-jsx code-highlight\",\n          children: [_jsxs(_components.span, {\n            className: \"code-line line-number\",\n            line: \"1\",\n            children: [_jsx(_components.span, {\n              className: \"token comment\",\n              children: \"//keyboard.jsx\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line line-number highlight-line\",\n            line: \"2\",\n            children: [_jsx(_components.span, {\n              className: \"token keyword module\",\n              children: \"export\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token keyword module\",\n              children: \"default\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token maybe-class-name\",\n              children: \"React\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \".\"\n            }), _jsx(_components.span, {\n              className: \"token method function property-access\",\n              children: \"memo\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"(\"\n            }), _jsx(_components.span, {\n              className: \"token maybe-class-name\",\n              children: \"Keyboard\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \",\"\n            }), \" areEqual\", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \")\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \";\"\n            }), \"\\n\"]\n          }), _jsx(_components.span, {\n            className: \"code-line line-number\",\n            line: \"3\",\n            children: \"\\n\"\n          }), _jsxs(_components.span, {\n            className: \"code-line line-number\",\n            line: \"4\",\n            children: [_jsx(_components.span, {\n              className: \"token comment\",\n              children: \"//App.jsx\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line line-number\",\n            line: \"5\",\n            children: [_jsx(_components.span, {\n              className: \"token keyword module\",\n              children: \"import\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token imports\",\n              children: _jsx(_components.span, {\n                className: \"token maybe-class-name\",\n                children: \"Keyboard\"\n              })\n            }), \" \", _jsx(_components.span, {\n              className: \"token keyword module\",\n              children: \"from\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token string\",\n              children: \"\\\"./keyboard\\\"\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \";\"\n            }), \"\\n\"]\n          }), _jsx(_components.span, {\n            className: \"code-line line-number\",\n            line: \"6\",\n            children: \"\\n\"\n          }), _jsxs(_components.span, {\n            className: \"code-line line-number\",\n            line: \"7\",\n            children: [_jsx(_components.span, {\n              className: \"token keyword module\",\n              children: \"export\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token keyword module\",\n              children: \"default\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token function-variable function\",\n              children: _jsx(_components.span, {\n                className: \"token maybe-class-name\",\n                children: \"App\"\n              })\n            }), _jsx(_components.span, {\n              className: \"token operator\",\n              children: \"=\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"(\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \")\"\n            }), _jsx(_components.span, {\n              className: \"token arrow operator\",\n              children: \"=>\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"{\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line line-number\",\n            line: \"8\",\n            children: [\"  \", _jsx(_components.span, {\n              className: \"token comment\",\n              children: \"//...\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line line-number\",\n            line: \"9\",\n            children: [\"  \", _jsxs(_components.span, {\n              className: \"token tag\",\n              children: [_jsxs(_components.span, {\n                className: \"token tag\",\n                children: [_jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"<\"\n                }), \"div\"]\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"className\"\n              }), _jsxs(_components.span, {\n                className: \"token attr-value\",\n                children: [_jsx(_components.span, {\n                  className: \"token punctuation attr-equals\",\n                  children: \"=\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"\\\"\"\n                }), \"App\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"\\\"\"\n                })]\n              }), _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \">\"\n              })]\n            }), _jsx(_components.span, {\n              className: \"token plain-text\",\n              children: \"\\n\"\n            })]\n          }), _jsxs(_components.span, {\n            className: \"code-line line-number\",\n            line: \"10\",\n            children: [_jsx(_components.span, {\n              className: \"token plain-text\",\n              children: \"    \"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"{\"\n            }), _jsx(_components.span, {\n              className: \"token comment\",\n              children: \"/*other code*/\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"}\"\n            }), _jsx(_components.span, {\n              className: \"token plain-text\",\n              children: \"\\n\"\n            })]\n          }), _jsxs(_components.span, {\n            className: \"code-line line-number highlight-line\",\n            line: \"11\",\n            children: [_jsx(_components.span, {\n              className: \"token plain-text\",\n              children: \"    \"\n            }), _jsxs(_components.span, {\n              className: \"token tag\",\n              children: [_jsxs(_components.span, {\n                className: \"token tag\",\n                children: [_jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"<\"\n                }), _jsx(_components.span, {\n                  className: \"token class-name\",\n                  children: \"Keyboard\"\n                })]\n              }), \" \", _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \"/>\"\n              })]\n            }), _jsx(_components.span, {\n              className: \"token plain-text\",\n              children: \"\\n\"\n            })]\n          }), _jsxs(_components.span, {\n            className: \"code-line line-number\",\n            line: \"12\",\n            children: [_jsx(_components.span, {\n              className: \"token plain-text\",\n              children: \"  \"\n            }), _jsxs(_components.span, {\n              className: \"token tag\",\n              children: [_jsxs(_components.span, {\n                className: \"token tag\",\n                children: [_jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"</\"\n                }), \"div\"]\n              }), _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \">\"\n              })]\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line line-number\",\n            line: \"13\",\n            children: [_jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"}\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \";\"\n            }), \"\\n\"]\n          })]\n        })\n      })\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.strong, {\n          children: \"Search Engine Optimization\"\n        }), \": I worked extensively on the head tag to insure better\\nSearch engine optimization.\"]\n      }), \"\\n\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{},"scope":{}},"meta":{"slug":"keyboadr","title":"Keyboadr:the easiest way to learn keyboarding.","excerpt":"Building a multi page App to Check github repository stats/data at a glance","date":"18-8-2022","tags":["css","hooks","javscript","optimization","react"]}}},"__N_SSG":true}